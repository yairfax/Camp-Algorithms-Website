<title>Rosh Sports Portal: Edit Session</title>
<h1>Enter Session Information</h1>
<p><b>NOTE:</b> To edit an existing session, navigate to Edit Session from that session's page.</p>
<form id="new-session-form">
	<!--Year and session-->
	<div class="form-row">
		<div class="form-group col-md-3">
			<label for="year">Year</label>
			<input class="form-control" type="number" id="year" name="year" min="2000" max="3000" required></input>
			<div class="invalid-feedback">Session already exists</div>
		</div>
		<div class="form-group col-md-3">
			<label for="session">Session</label>
			<div class="form-check">
				<input class="form-check-input session" type='radio' name="session" value="i" required>First</input>
			</div>
			<div class="form-check">
				<input class="form-check-input session" type='radio' name="session" value="ii" required>Second</input>
			</div>
		</div>
	</div>

	<!--Bunk entering area-->
	<h2>Bunks</h2>
	<div class="form-row">
		{{#each eidot}}
		<div class="col-md-2" style="text-align: center">
			<label>{{this}}</label>
			<div class="form-group">
				<input class="form-control {{this}}" type="text" name="{{this}}">
			</div>
			<div class="form-group">
				<input class="form-control {{this}}" type="text" name="{{this}}">
			</div>
			<div class="form-group">
				<input class="form-control {{this}}" type="text" name="{{this}}">
			</div>
			<div class="form-group">
				<input class="form-control {{this}}" type="text" name="{{this}}">
			</div>
		</div>
		{{/each}}
	</div>

	<!--Chug entering field-->
	<h2>Chugim</h2>
	<p>Please enter the chug name, its popularity as a number between 0 and 1, its capacity, and which eidot its open to.</p>
	<div id="chug-container"></div>
	<div id="form-group form-check" style="visibility: hidden">
		<input class="form-check-input" type="text" name="editing" id="edit"></input>
	</div>
	<div id="button-container" style="padding-bottom: 25px">
		<button type="button" class="btn btn-primary" id="add-chug">Add Chug</button>
		<button type="submit" class="btn btn-primary">Submit</button>
	</div>
</form>

<script>
	// creates new chug div
	function getNewChug() {
		var chugAdd = $("<div>")
		var temp = `
		<div class="form-row">
			<div class="form-group col-md-5">
				<input class="form-control" id="name" type="text" placeholder="Chug Name" required></input>
				<div class="invalid-feedback">Please select eidot for this chug</div>
			</div>
			<div class="form-group col-md-2">
				<input class="form-control" id="pop" type="number" step=".1" min="0" max="1" placeholder="Popularity" required></input>
			</div>
			<div class="form-group col-md-2">
				<input class="form-control" id="cap" type="number" min="0" max="100" placeholder="Capacity" required></input>
			</div>
			<button type="button" id="delete" class="btn btn-danger delete-chug" style="height: 37px">-</button>
		</div>
		<div class="form-row">
			<div class="form-group">`
		for (var eidah of ["Aleph", "Vav", "Bet", "Gimmel", "Daled", "AV", "BGD", "All"]) {
			temp += `<div class="form-check form-check-inline">
							<input class="form-check-input eidot" type="checkbox" value="${eidah.toLowerCase()}">
							<label class="form-check-label" for="${eidah.toLowerCase()}">${eidah}</label>
						</div>`
		}
		temp += `</div></div><hr>`;

		chugAdd.append(temp)
		return chugAdd;
	}
	
	// Adds chug to chug container
	function addChug(newChug) {
		$("#chug-container").append(newChug);
		$(".delete-chug").on("click", function(event) {
			// Double parent for both rows. outer div tag makes sure it only removes this elt
			$(this).parentsUntil("#chug-container").remove();
		});
	}

	// Creates new chug and appends
	$("#add-chug").on('click', function() {
		addChug(getNewChug());
	});

	$("#new-session-form").submit((e) => {
		e.preventDefault()
		data = {
			year: parseInt($("#year").val()),
			session: $("input[name=\"session\"]").val(),
			bunks: _.reduce(ctxt.eidot, (memo, eidah) => {
				memo[eidah] = _.map($(`.${eidah}`), ele => ele.value)
				return memo
			}, {}),
			chugim: _.map($("#chug-container").contents(), chug => {
				return {
					name: $(chug).find("#name").val(),
					popularity: parseFloat($(chug).find("#pop").val()),
					capacity: parseInt($(chug).find("#cap").val()),
					eidot: _.uniq(_.reduce($(chug).find("input.eidot:checked"), (memo, eidah) => {
						switch (eidah.value) {
							case "bgd":
								return memo.concat(["bet", "gimmel", "daled"])
							case "av":
								return memo.concat(["aleph", "vav"])
							case "all":
								return memo.concat(["aleph", "vav", "bet", "gimmel", "daled"])
							default:
								return memo.concat([eidah.value])
						}
					}, []))
				}
			})
			// functional programming ftw
		}

		
	})
</script>